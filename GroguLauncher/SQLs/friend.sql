-- FRIENDSHIP --
-- ref https://dba.stackexchange.com/questions/135941/designing-a-friendships-database-structure-should-i-use-a-multivalued-column/135966#135966
CREATE TABLE FRIENDSHIP
(
	REQUESTER_ID INT NOT NULL,
    ADDRESSEE_ID INT NOT NULL,
    CREATED_TIME DATETIME NOT NULL,
    --
    CONSTRAINT FRIENDSHIP_PK PRIMARY KEY(REQUESTER_ID, ADDRESSEE_ID),
    CONSTRAINT FRIENDSHIP_REQUESTER_FK FOREIGN KEY (REQUESTER_ID) REFERENCES RED_USER(USER_ID),
    CONSTRAINT FRIENDSHIP_ADDRESSEE_FK FOREIGN KEY (ADDRESSEE_ID) REFERENCES RED_USER(USER_ID)
);

-- REQ: 2, ADDR: 3
INSERT INTO FRIENDSHIP (REQUESTER_ID, ADDRESSEE_ID, CREATED_TIME) VALUES (2, 3, NOW());
INSERT INTO FRIENDSHIP (REQUESTER_ID, ADDRESSEE_ID, CREATED_TIME) VALUES (2, 4, NOW());
INSERT INTO FRIENDSHIP (REQUESTER_ID, ADDRESSEE_ID, CREATED_TIME) VALUES (3, 2, NOW());

SELECT * FROM FRIENDSHIP;

-- DROP TABLE FRIENDSHIP; 
DELETE FROM FRIENDSHIP;

-- RELATION
CREATE TABLE FRIEND_RELATION
(
	REQUESTER_ID INT NOT NULL,
    ADDRESSEE_ID INT NOT NULL,
    STATUS_CODE CHAR(1) NOT NULL,
    SPECIFIER_ID INT NOT NULL,
    SPECIFIED_DATETIME DATETIME NOT NULL,
	-- 
    CONSTRAINT FRIEND_RELATION_PK PRIMARY KEY(REQUESTER_ID, ADDRESSEE_ID),
    CONSTRAINT FRIEND_RELATION_REQUESTER_FK FOREIGN KEY (REQUESTER_ID) REFERENCES RED_USER(USER_ID),
    CONSTRAINT FRIEND_RELATION_ADDRESSEE_FK FOREIGN KEY (ADDRESSEE_ID) REFERENCES RED_USER(USER_ID),
	CONSTRAINT FRIEND_RELATION_MY_STATUS_FK FOREIGN KEY (STATUS_CODE) REFERENCES MY_STATUS(STATUS_CODE),
	CONSTRAINT FRIEND_RELATION_SPECIFIER_FK FOREIGN KEY (SPECIFIER_ID) REFERENCES RED_USER(USER_ID)
);

SELECT * FROM FRIEND_RELATION;

-- DROP TABLE FRIEND_RELATION;
DELETE FROM FRIEND_RELATION;

SELECT REQUESTER_ID FROM FRIEND_RELATION
WHERE ADDRESSEE_ID = 2 AND STATUS_CODE = 'R'
AND NOT exists (SELECT REQUESTER_ID FROM FRIENDSHIP WHERE ADDRESSEE_ID = 2);

SELECT REQUESTER_ID FROM FRIEND_RELATION
WHERE ADDRESSEE_ID = 2 AND STATUS_CODE = 'R'
AND NOT exists (SELECT * FROM FRIENDSHIP WHERE REQUESTER_ID = 2 OR ADDRESSEE_ID = 2);

SELECT * FROM FRIENDSHIP
WHERE (REQUESTER_ID = 1 AND ADDRESSEE_ID = 5) OR (REQUESTER_ID = 5 AND ADDRESSEE_ID = 1);

INSERT INTO FRIEND_RELATION 
(REQUESTER_ID, ADDRESSEE_ID, STATUS_CODE, SPECIFIER_ID, SPECIFIED_DATETIME) 
VALUES (8, 10, 'A', 8, NOW());

-- MY STATUS
CREATE TABLE MY_STATUS
(
	STATUS_CODE CHAR(1) NOT NULL,
    NAME CHAR(30) NOT NULL,
    --
    CONSTRAINT MY_STATUS_PK PRIMARY KEY (STATUS_CODE),
    CONSTRAINT MY_STATUS_AK UNIQUE(NAME)
);

INSERT INTO MY_STATUS (STATUS_CODE, NAME) VALUES('R', 'Requested');
INSERT INTO MY_STATUS (STATUS_CODE, NAME) VALUES('A', 'Accepted');
INSERT INTO MY_STATUS (STATUS_CODE, NAME) VALUES('D', 'Denied');
INSERT INTO MY_STATUS (STATUS_CODE, NAME) VALUES('B', 'Blocked');

SELECT * FROM MY_STATUS;
